var arrays;!function(t){t.monthsDays=[31,28,31,30,31,30,31,31,30,31,30,31]}(arrays||(arrays={}));var classes;!function(t){var r=function(){function t(){}return t.prototype.getRange=function(t,r){var e=null,a=null,s=!1,n=[];0>t&&0>r?(t=Math.abs(t),r=Math.abs(r),s=!0,t>r&&(a=r,r=t,t=a)):t>r&&(e=r,r=t,t=e);for(var o=t;r>=o;o++)n.push(s?-o:o);return n},t}();t.Ranger=r}(classes||(classes={}));var monthsDays=arrays.monthsDays,Ranger=classes.Ranger,ISO8601Localizer=function(){function t(t){this.ISO8601Pattern=/(\d{4})-([0-1][0-9])-([0-3][0-9])T([0-2][0-9]):([0-5][0-9]):([0-5][0-9])/,this.userISO8601=t,this.userOffset=(new Date).getTimezoneOffset()/-60}return t.prototype.to=function(t){return this.validOffset(t)||this.errorThrower(0),this.userOffset=t,this},t.prototype.localize=function(){var t=this.userISO8601.toUpperCase();this.isValid(t)||this.errorThrower(1);var r=this.getOffset(),e=r.offsetHours,a=r.operator,s=t.match(this.ISO8601Pattern),n=s.shift(),o=s.map(function(t){return parseInt(t)}),i=o[0],f=o[1],h=o[2],u=o[3],c=o[4],p=o[5],l=this.isLeapYear(i),v=monthsDays[f-1];l&&2===f&&(v=29),this.isLogical(v,h)||this.errorThrower(2);var y=function(){return 0>f-2?monthsDays[12+(f-2)]:monthsDays[f-2]}();if(l&&3===f&&(y=29),"="===a)return n;if("+"===a){var g=u+=e;if(g>23){var O=Math.floor(g/24),d=u=g%24,w=h+=O;if(w>v){var m=(h=w-v,f+=1);if(m>12){f=1,i+=1}}}}if("-"===a){var g=u-=e;if(1>g){g=Math.abs(g)+24;var I=Math.floor(g/24),d=u=24-g%24;0===g&&(I=1,d=u=0);var w=h-=I;if(1>w){var m=(h=y+w,f-=1);if(1>m){f=12,i-=1}}}}var T=[i,f,h,u,c,p].slice(0),S=[];for(var D in T){var b=T[D].toString();S.push(1===b.length?"0"+b:b)}return S[0]+"-"+S[1]+"-"+S[2]+"T"+S[3]+":"+S[4]+":"+S[5]},t.prototype.errorThrower=function(t){switch(t){case 0:throw"Invalid offset supplied, valid offsets are between -11 to 14";case 1:throw"Invalid ISO8601, try something like(case insensitive, T may be t): 2005-06-03T13:04:32";case 2:throw"Non logical date, please check that there are X days in month Y.";default:throw"Unknow error code."}},t.prototype.isLogical=function(t,r){return t>=r},t.prototype.getOffset=function(){var t=this.userOffset;return{operator:function(){return t>0?"+":0>t?"-":"="}(),offsetHours:Math.abs(t)}},t.prototype.validOffset=function(t){var r=new Ranger,e=r.getRange(-11,14);return e.indexOf(t)>-1?!0:!1},t.prototype.isValid=function(t){return this.ISO8601Pattern.test(t)},t.prototype.isLeapYear=function(t){return t%4===0&&t%100!==0||t%4===0&&t%100===0&&t%400===0},t}();
//# sourceMappingURL=ISO8601-Localizer.min.js.map